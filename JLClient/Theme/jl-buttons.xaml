<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:imIcon="clr-namespace:JLClient.Core.VisualComponents">

    <Style TargetType="DropDownButton" x:Key="jl-img-dropbutton">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DropDownButton}">

                    <StackPanel Orientation="Horizontal">

                        <Label x:Name="textBlock" Content="{TemplateBinding Content}" Style="{StaticResource card-label}"/>

                        <ContentControl x:Name="IconContent" Margin="5" RenderTransformOrigin="0.5,0.5" Content="{Binding (imIcon:ButtonWithImage.Icon), RelativeSource={RelativeSource TemplatedParent}}">

                            <ContentControl.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </ContentControl.RenderTransform>
                        </ContentControl>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="Button" x:Key="jl-img-button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <StackPanel Orientation="Horizontal" Background="{TemplateBinding Background}">

                        <Label x:Name="textBlock" Content="{TemplateBinding Content}" Style="{StaticResource card-label}"/>
                        
                        <ContentControl x:Name="IconContent" Margin="5" RenderTransformOrigin="0.5,0.5" Content="{Binding (imIcon:ButtonWithImage.Icon), RelativeSource={RelativeSource TemplatedParent}}">

                            <ContentControl.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </ContentControl.RenderTransform>
                        </ContentControl>
                    </StackPanel>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource control-background-primary-disabled-brush}"/>
                            <Setter Property="Cursor" Value="Hand"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
                
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="jl-img-button-left">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <StackPanel Orientation="Horizontal" Background="{TemplateBinding Background}">

                        <ContentControl x:Name="IconContent" Margin="5" RenderTransformOrigin="0.5,0.5" Content="{Binding (imIcon:ButtonWithImage.Icon), RelativeSource={RelativeSource TemplatedParent}}">

                            <ContentControl.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </ContentControl.RenderTransform>
                        </ContentControl>

                        <Label x:Name="textBlock" Content="{TemplateBinding Content}" Style="{StaticResource card-label}"/>
                    </StackPanel>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource control-background-primary-disabled-brush}"/>
                            <Setter Property="Cursor" Value="Hand"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="jl-primary-button">
        <Setter Property="Background" Value="{DynamicResource control-background-primary-brush}"/>
        <Setter Property="Foreground" Value="{DynamicResource control-foreground-primary-brush}"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="MaxHeight" Value="80"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="MaxWidth" Value="240"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="borderName" CornerRadius="5"
                            Background="{TemplateBinding Background}"
                            MaxWidth="{TemplateBinding MaxWidth}"
                            MaxHeight="{TemplateBinding MaxHeight}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                        <ContentPresenter 
                            x:Name="contentPres"
                            Focusable="False"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            Margin="5"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            RecognizesAccessKey="True"
                            />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="borderName" Property="Background" Value="{DynamicResource control-background-primary-highlight-brush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource control-foreground-primary-highlight-brush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="borderName" Property="Background" Value="{DynamicResource control-background-primary-pressed-brush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="jl-danger-button">
        <Setter Property="Background" Value="{DynamicResource control-background-danger-brush}"/>
        <Setter Property="Foreground" Value="{DynamicResource control-foreground-danger-brush}"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="MaxHeight" Value="80"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="MaxWidth" Value="240"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="borderName" CornerRadius="5"
                            Background="{TemplateBinding Background}"
                            MaxWidth="{TemplateBinding MaxWidth}"
                            MaxHeight="{TemplateBinding MaxHeight}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                        <ContentPresenter 
                            x:Name="contentPres"
                            Focusable="False"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            Margin="5"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            RecognizesAccessKey="True"
                            />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="borderName" Property="Background" Value="{DynamicResource control-background-danger-highlight-brush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource control-foreground-danger-highlight-brush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="borderName" Property="Background" Value="{DynamicResource control-background-danger-pressed-brush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="jl-secondary-button">
        <Setter Property="Background" Value="{DynamicResource control-background-secondary-brush}"/>
        <Setter Property="Foreground" Value="{DynamicResource control-foreground-secondary-brush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource control-border-secondary-brush}"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="MaxHeight" Value="80"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="MaxWidth" Value="240"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="borderName" CornerRadius="5"
                            Background="{TemplateBinding Background}"
                            MaxWidth="{TemplateBinding MaxWidth}"
                            MaxHeight="{TemplateBinding MaxHeight}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                        <ContentPresenter 
                            x:Name="contentPres"
                            Focusable="False"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            Margin="5"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            RecognizesAccessKey="True"
                            />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="borderName" Property="Background" Value="{DynamicResource control-background-secondary-highlight-brush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource control-foreground-secondary-highlight-brush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="borderName" Property="Background" Value="{DynamicResource control-background-secondary-pressed-brush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource control-foreground-secondary-highlight-brush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>